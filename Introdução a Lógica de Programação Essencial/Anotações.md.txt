# INTRODUÇÃO À LÓGICA DE PROGRAMAÇÃO ESSENCIAL## AULA 1 - Entendendo o que é lógica*"O Programador é contratado e existe para solucionar problemas"***Lógica de programação :** língua e habilidades de resolver problemas. Sequência de raciocínios, ideias.**Algoritmo:** sequência de passos para resolver um problema.**Metacognição :** Pensar como você pensa**Ex. (Excel):** Eu preciso comprar 2 camisetas| Camiseta 1 | Camiseta 2 |   Total   | Desconto (%) | Desconto (R$) | Total à Pagar || :--------: | :--------: | :-------: | :----------: | :-----------: | :-----------: ||  R$ 50,00  |  R$ 50,00  | R$ 100,00 |      20      |   R$ 20,00    |   R$ 80,00    |**Abstração (fazer de forma mais simples) :** habilidade de se concentrar nos aspectos essenciais *É uma habilidade de um ótimo programador***IMPORTANTE: ** Identificar o início e fim!EXERCÍCIO PARA CALCULAR A MÉDIA DOS ALUNOSMédia aritmética de um aluno, notas:Nota 1: 5Nota 2: 7Nota 3: 10Nota 4: 3## AULA 2 - O que são algoritmos e pseudocódigo### Professor: Denilson Bonatti**Algoritmo =** sequência de passos para resolver um problema**Ex.:**###### Início-dia1. Acordei2. Levantei da Cama3. Troquei de Roupa4. Escovei os dentes5. Fui a padaria6. Tomei café7. Escovei os dentes8. Fui ao Trabalho   ...###### Fim-dia###### Ex. em jogo para entender e treinar algoritmo e pseudocódigo: <br/>https://studio.code.org/s/mc/lessons/1/levels/12**Pseudocódigo: ** forma genérica de escrever um algoritmo, utilizando linguagem nativa.###### Ex. em jogo: <br/>https://www.proprofsgames.com/wolf-sheep-and-cabbage/## AULA 3 - Fluxograma, Variáveis e Constantes### Professor: Denilson Bonatti**Fluxograma =** é uma ferramenta utilizada para fluxo de dados, representa graficamente o algoritmo.###### Início - entrada - processamento - saída - fim**Variáveis =** (*o que usamos para armazenar o que o usuário digitou*) **=** é um objeto (uma posição, frequentemente localizada na memória) capaz de reter e representar um valor ou expressão **=** é um espaço na memória do computador destinado a um dado que é alterado durante a execução do algoritmo. Elas podem ser númericas, caracteres, alfanúmericas ou lógica.obs: Nunca começar com um número, colocar infomações sem a tecla "espaço", palavras sem acento.###### Pseudocódigo:###### início1. declara nota12. declara nota23. declara nota34. declara nota45. declara média6. leia (nota1)7. leia (nota2)8. leia (nota3)9. leia (nota4)10. media=(nota1+nota2+nota3+nota4)/411. imprimir(media)###### fim**Constantes =** são valores imutáveis e não são alterados durante a vida útil do programa###### Pseudocódigo:###### início1. declara pi=3,142. declara raio: número###### fim## AULA 4 - Tomada de decisões e expressões### Professor: Denilson Bonatti**Expressões aritiméticas =** são expressões que utilizam operadores aritméticos e funções aritméticas envolvendo constante e variáveis.**Ex.:** 50+50Total+50###### Operadores aritiméticos:- Soma +- Subtração -- Multiplicação *- Divisão /- Potenciação ^- Porcentagem %**Expressões literais =** são expressões com constantes e/ou variáveis que tem como resultado valores literais. **Ex.:**nome="José da Silva"nome <- "José da Silva"media=(nota1+nota2)/2**Expressões relacionais =** são expressões compostas por outras expressões ou variáveis numéricas com operadores relacionais. As expressões relacionais retornam valores lógicos (Verdadeiro/Falso).###### Operadores relacionais:- ( > ) maior que- ( >= ) maior ou igual- ( < ) menor que- ( <= ) menor ou igual- ( == ) igualdade/comparação- ( != ) diferente de**Tomadas de decisão =** são 60% da programação **=** necessidade de decidir o que fazer dependendo de alguma condição encontrada durante a execução.obs: Se for indicar valor da variável não usa aspas, mas se for texto, usa aspas.## AULA 5 - Como utilizar a concentração### Professor: Denilson Bonatti**Concatenação =** é um termo usado em computação para a operação de unir o conteúdo de duas strings. Dependendo da linguagem podem ser os símbolos: &, +, ou .**String: ** Sequência de caracteres.**Ex.:**	funcao inicio()	{​		escreva("Natália" & "Negrão")​		Return: Natália Negrão​	}# INTRODUÇÃO AO PORTUGOL## AULA 6 - Como utilizar uma estrutura de repetição### Professor: Denilson Bonatti**Estrutura de repetição =** é uma estrutura que permite executar mais de uma vez o mesmo comando ou conjunto de comandos, de acordo com uma condição ou com um contador.*(junto com tomada de decisão representam 70% da programação)*## AULA 7 - O que são linguagens de programação?### Professor: Denilson Bonatti###### Linguagens de Programação e o Portugol**Linguagens de Programação =** serve de um meio de comunicação entre computadores e humanos.###### Existem 2 tipos de linguagem:**Alto Nível:** Aproxima da nossa linguagem. (C, C#, python, C++, Javascript)**Baixo Nível:** próxima da linguagem de máquina. (Assembly)###### Existem também:**Compiladas =** É uma linguagem de programação em que o código fonte, é executado diretamente pelo sistema operacional ou pelo processador, após ser traduzido por meio de um processo chamado compilação. Compilador pega o código e traduz para linguagem de máquina (formato: .exe) (C#, Visual Basic, Delphi, C++)**Interpretadas =** É uma linguagem de programação em que o código fonte é executado por um programa de computador chamado interpretador, que em seguida é executado pelo sistema operacional ou processador. (Javascript, PHP, Python, etc...)**Portugol =** é um software com pseudolinguagem que permite ao leitor desenvolver algoritmos estruturados em português de forma simples e intuitiva, independente da linguagem de programação.## AULA 8 - Aprenda a utilizar desvios condicionais e boas práticas em programação### Professor: Denilson Bonatti**Desvio condicional - se (comando) =** É utilizada a palavra reservada se, a condição a ser testada entre parênteses e as instruções que devem ser executadas, entre chaves, caso o desvio seja verdadeiro.**Ex.:**	se (media>=7) {		Escreva("Parabéns você foi aprovado!")	}obs: comando "\n" - quebra a linha**SE FOR FALSA = senao **Caso: ** quando tiver diversas opções. Usa vários comandos na mesma chave.*Importante: Comentário antes do programa para o programador entender futuramente. Boas práticas antes de cada bloco de programação.## AULA 9 - Trabalhando com laços de repetição em Portugol### Professor: Denilson BonattiLaços de repetição em Portugol = dentro da lógica de programação é uma estrutura que permite executar mais de uma vez o mesmo comando ou um conjunto de comandos, de acordo com uma condição de um contador. Comandos: faca e enquanto.**Ex.:**	funcao inicio()	{		inteiro contador,limite,resultado		contador=0		limite=10		faca		{			resultado=9*contador			escreva("9x "+contador+"="+resultado+"\n"			contador++		}enquanto )contado<=limite)	}## AULA 10 - Aplicação prática com matrizes e vetores### Professor: Denilson Bonatti**Matriz =** é uma coleção de variáveis do mesmo tipo, acessíveis com um único nome e armazenados contiguamente na memória.*A individualização de cada variável de um vetor é feita através do uso de índices.***Vetores =** são matrizes de uma só dimensão.**Ex.:**cadeia Vetor[5]; //declara um vetor de 5 posçõescadeia Matriz[5] [3]; //declara uma matriz de 5 linhas e 3 colunascadeia frutas[4];frutas[0]="Maça"frutas[1]="Pera"frutas[2]="Uva"frutas[3]="Melão"escreva(frutas[2])cadeia cesta[][] = {{"Maça","100"},{"Pera","200"},{"Melão","300"}}escreva("Fruta: " + cesta[0][0] + "Quantidade: " + cesta[0][1])***